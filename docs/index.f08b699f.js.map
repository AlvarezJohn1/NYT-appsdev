{"mappings":"ACAA,MAAM,EAAkB,SAEb,AADU,CAAA,MAAM,MAAM,mBAA7B,EACgB,IAAI,GAGlB,EAAa,SAER,AADU,CAAA,MAAM,MAAM,aAA7B,EACgB,IAAI,GAGlB,EAAiB,MAAO,IAC1B,GAAI,CACA,IAAM,EAAW,MAAM,MAAM,CAAC,sCAAsC,EAAE,EAAK,MAAM,CAAC,EAClF,GAAI,CAAC,EAAS,EAAE,CAAE,MAAM,AAAI,MAAM,mBAClC,OAAO,EAAS,GAAG,AACvB,CAAE,MAAO,EAAO,CACZ,MAAO,iBACX,CACJ,EA2DA,AAzDuB,CAAA,UACnB,GAAI,CACA,IAAM,EAAiB,MAAM,IACvB,EAAY,MAAM,IAElB,EAAc,SAAS,cAAc,CAAC,cAC5C,CAAA,EAAY,SAAS,CAAG,GAExB,EAAe,OAAO,CAAC,OAAO,CAAC,AAAA,IAC3B,IAAM,EAAW,SAAS,aAAa,CAAC,MACxC,CAAA,EAAS,SAAS,CAAG,QAErB,IAAM,EAAQ,SAAS,aAAa,CAAC,MACrC,CAAA,EAAM,GAAG,CAAG,EAAM,UAAU,EAAI,EAAM,UAAU,CAAC,MAAM,CAAG,EAAI,EAAM,UAAU,CAAC,EAAE,CAAC,GAAG,CAAG,0BACxF,EAAM,GAAG,CAAG,EAAM,KAAK,CAEvB,IAAM,EAAY,SAAS,aAAa,CAAC,IACzC,CAAA,EAAU,IAAI,CAAG,EAAM,GAAG,CAC1B,EAAU,MAAM,CAAG,SACnB,EAAU,SAAS,CAAG,CAAC,IAAI,EAAE,EAAM,KAAK,CAAC,KAAK,CAAC,CAE/C,IAAM,EAAc,SAAS,aAAa,CAAC,IAC3C,CAAA,EAAY,WAAW,CAAG,EAAM,QAAQ,CAExC,EAAS,WAAW,CAAC,GACrB,EAAS,WAAW,CAAC,GACrB,EAAS,WAAW,CAAC,GACrB,EAAY,WAAW,CAAC,EAC5B,GAEA,IAAM,EAAY,SAAS,cAAc,CAAC,aAG1C,IAAK,IAAM,KAFX,EAAU,SAAS,CAAG,GAEH,EAAU,OAAO,EAAE,CAClC,IAAM,EAAU,SAAS,aAAa,CAAC,MACvC,CAAA,EAAQ,SAAS,CAAG,OAEpB,IAAM,EAAW,SAAS,aAAa,CAAC,IACxC,CAAA,EAAS,IAAI,CAAG,EAAK,GAAG,CACxB,EAAS,MAAM,CAAG,SAElB,IAAM,EAAW,MAAM,EAAe,EAAK,MAAM,CAAC,EAAE,EAE9C,EAAY,SAAS,aAAa,CAAC,MACzC,CAAA,EAAU,GAAG,CAAG,EAChB,EAAU,GAAG,CAAG,EAAK,UAAU,CAE/B,EAAS,SAAS,CAAG,CAAC,IAAI,EAAE,EAAK,UAAU,CAAC,WAAW,EAAE,EAAK,WAAW,CAAC,IAAI,CAAC,CAC/E,EAAQ,WAAW,CAAC,GACpB,EAAQ,WAAW,CAAC,GACpB,EAAU,WAAW,CAAC,EAC1B,CACJ,CAAE,MAAO,EAAO,CACZ,QAAQ,KAAK,CAAC,4BAA6B,EAC/C,CACJ,CAAA","sources":["<anon>","src/script.js"],"sourcesContent":["const fetchTopStories = async ()=>{\n    const response = await fetch(\"Top-Stories.json\");\n    return response.json();\n};\nconst fetchBooks = async ()=>{\n    const response = await fetch(\"Books.json\");\n    return response.json();\n};\nconst fetchBookCover = async (isbn)=>{\n    try {\n        const response = await fetch(`https://covers.openlibrary.org/b/isbn/${isbn}-L.jpg`);\n        if (!response.ok) throw new Error(\"Cover not found\");\n        return response.url;\n    } catch (error) {\n        return \"placeholder.png\";\n    }\n};\nconst displayContent = async ()=>{\n    try {\n        const topStoriesData = await fetchTopStories();\n        const booksData = await fetchBooks();\n        const storiesGrid = document.getElementById(\"storiesGrid\");\n        storiesGrid.innerHTML = \"\";\n        topStoriesData.results.forEach((story)=>{\n            const storyDiv = document.createElement(\"div\");\n            storyDiv.className = \"story\";\n            const image = document.createElement(\"img\");\n            image.src = story.multimedia && story.multimedia.length > 0 ? story.multimedia[0].url : \"default-placeholder.jpg\";\n            image.alt = story.title;\n            const storyLink = document.createElement(\"a\");\n            storyLink.href = story.url;\n            storyLink.target = \"_blank\";\n            storyLink.innerHTML = `<h3>${story.title}</h3>`;\n            const description = document.createElement(\"p\");\n            description.textContent = story.abstract;\n            storyDiv.appendChild(image);\n            storyDiv.appendChild(storyLink);\n            storyDiv.appendChild(description);\n            storiesGrid.appendChild(storyDiv);\n        });\n        const booksGrid = document.getElementById(\"booksGrid\");\n        booksGrid.innerHTML = \"\";\n        for (const book of booksData.results){\n            const itemDiv = document.createElement(\"div\");\n            itemDiv.className = \"item\";\n            const bookLink = document.createElement(\"a\");\n            bookLink.href = book.url;\n            bookLink.target = \"_blank\";\n            const coverUrl = await fetchBookCover(book.isbn13[0]);\n            const bookImage = document.createElement(\"img\");\n            bookImage.src = coverUrl;\n            bookImage.alt = book.book_title;\n            bookLink.innerHTML = `<h3>${book.book_title}</h3><p>by ${book.book_author}</p>`;\n            itemDiv.appendChild(bookImage);\n            itemDiv.appendChild(bookLink);\n            booksGrid.appendChild(itemDiv);\n        }\n    } catch (error) {\n        console.error(\"Error displaying content:\", error);\n    }\n};\ndisplayContent();\n\n//# sourceMappingURL=index.f08b699f.js.map\n","const fetchTopStories = async () => { \r\n    const response = await fetch('Top-Stories.json'); \r\n    return response.json(); \r\n}; \r\n\r\nconst fetchBooks = async () => { \r\n    const response = await fetch('Books.json'); \r\n    return response.json(); \r\n}; \r\n\r\nconst fetchBookCover = async (isbn) => { \r\n    try { \r\n        const response = await fetch(`https://covers.openlibrary.org/b/isbn/${isbn}-L.jpg`); \r\n        if (!response.ok) throw new Error('Cover not found'); \r\n        return response.url; \r\n    } catch (error) { \r\n        return 'placeholder.png'; \r\n    } \r\n}; \r\n\r\nconst displayContent = async () => { \r\n    try { \r\n        const topStoriesData = await fetchTopStories(); \r\n        const booksData = await fetchBooks(); \r\n\r\n        const storiesGrid = document.getElementById('storiesGrid'); \r\n        storiesGrid.innerHTML = ''; \r\n\r\n        topStoriesData.results.forEach(story => { \r\n            const storyDiv = document.createElement('div'); \r\n            storyDiv.className = 'story'; \r\n\r\n            const image = document.createElement('img'); \r\n            image.src = story.multimedia && story.multimedia.length > 0 ? story.multimedia[0].url : 'default-placeholder.jpg'; \r\n            image.alt = story.title; \r\n\r\n            const storyLink = document.createElement('a'); \r\n            storyLink.href = story.url; \r\n            storyLink.target = '_blank'; \r\n            storyLink.innerHTML = `<h3>${story.title}</h3>`; \r\n\r\n            const description = document.createElement('p'); \r\n            description.textContent = story.abstract; \r\n\r\n            storyDiv.appendChild(image); \r\n            storyDiv.appendChild(storyLink); \r\n            storyDiv.appendChild(description); \r\n            storiesGrid.appendChild(storyDiv); \r\n        }); \r\n\r\n        const booksGrid = document.getElementById('booksGrid'); \r\n        booksGrid.innerHTML = ''; \r\n\r\n        for (const book of booksData.results) { \r\n            const itemDiv = document.createElement('div'); \r\n            itemDiv.className = 'item'; \r\n\r\n            const bookLink = document.createElement('a'); \r\n            bookLink.href = book.url; \r\n            bookLink.target = '_blank'; \r\n\r\n            const coverUrl = await fetchBookCover(book.isbn13[0]); \r\n\r\n            const bookImage = document.createElement('img'); \r\n            bookImage.src = coverUrl; \r\n            bookImage.alt = book.book_title; \r\n\r\n            bookLink.innerHTML = `<h3>${book.book_title}</h3><p>by ${book.book_author}</p>`; \r\n            itemDiv.appendChild(bookImage); \r\n            itemDiv.appendChild(bookLink); \r\n            booksGrid.appendChild(itemDiv); \r\n        } \r\n    } catch (error) { \r\n        console.error('Error displaying content:', error); \r\n    } \r\n}; \r\n\r\ndisplayContent(); \r\n"],"names":["fetchTopStories","response","fetch","json","fetchBooks","fetchBookCover","isbn","ok","Error","url","error","displayContent","topStoriesData","booksData","storiesGrid","document","getElementById","innerHTML","results","forEach","story","storyDiv","createElement","className","image","src","multimedia","length","alt","title","storyLink","href","target","description","textContent","abstract","appendChild","booksGrid","book","itemDiv","bookLink","coverUrl","isbn13","bookImage","book_title","book_author","console"],"version":3,"file":"index.f08b699f.js.map"}